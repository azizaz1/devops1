pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                // Checkout source code from your repository
                // Use the appropriate SCM configuration for your repository
                // For example, for Git:
                git branch: 'testProduit', credentialsId: 'your-credentials', url: 'https://github.com/azizaz1/devops1.git'
            }
        }

        stage('Build') {
            steps {
                // Build your project
                sh 'mvn clean package'
            }
        }

        stage('Test') {
            steps {
                // Run your tests
                sh 'mvn test'
            }
        }

        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv(installationName: 'sq1'){
                    // Run SonarQube analysis using the SonarQube Scanner
                    sh 'mvn sonar:sonar'
                }
            }
        }


        stage('Publish Test Results') {
            steps {
                // Publish JUnit test results in Jenkins
                junit '**/target/surefire-reports/TEST-*.xml'
            }
    }
 stage('Publish to Nexus') {
            steps {
                script {
                    def pom = readMavenPom()
                    def nexusUrl = pom.distributionManagement.repository.url
                    
                    if (nexusUrl) {
                        def nexusCred = 'NEXUS_CRED' // Credentials ID in Jenkins
                        def artifactPath = "target/${pom.artifactId}-${pom.version}.${pom.packaging}"

                        if (fileExists(artifactPath)) {
                            nexusArtifactUploader(
                                nexusVersion: 'nexus3', // Nexus version
                                protocol: 'http', // Protocol used (http/https)
                                nexusUrl: 'http://192.168.33.10:8081',
                                credentialsId: 'NEXUS_CRED',
                                groupId: 'pom.tn.esprit.rh',
                                version: 'pom.1.0',
                                repository: 'maven-releases', // Nexus repository name
                                artifacts: [
                                    [artifactId: 'achat.artifactId',
                                    classifier: '',
                                    file: artifactPath,
                                    type: pom.packaging]
                                ]
                            )
                        } else {
                            error "Artifact not found at path: ${artifactPath}"
                        }
                    } else {
                        error "Nexus repository URL not found in pom.xml"
                    }
                }
            }
        }
        
       
}

}
